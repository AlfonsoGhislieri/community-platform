"use strict";(self.webpackChunkoa_docs=self.webpackChunkoa_docs||[]).push([[677],{9305:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return c},default:function(){return u}});var i=n(7462),a=n(3366),r=(n(7294),n(3905)),o={},l="Deployment via CircleCI",s={unversionedId:"Deployment/circle-ci",id:"Deployment/circle-ci",isDocsHomePage:!1,title:"Deployment via CircleCI",description:"We use CircleCI to handle automated build-test-deploy cycles when PRs and releases are created from the GitHub Repository",source:"@site/docs/Deployment/circle-ci.md",sourceDirName:"Deployment",slug:"/Deployment/circle-ci",permalink:"/Deployment/circle-ci",editUrl:"https://github.com/ONEARMY/community-platform/edit/master/documentation/docs/Deployment/circle-ci.md",tags:[],version:"current",frontMatter:{},sidebar:"mainSidebar",previous:{title:"Style Guide",permalink:"/"},next:{title:"Automated Backup and Migration",permalink:"/Server Maintenance/dataMigration"}},c=[{value:"Environment Variables",id:"environment-variables",children:[{value:"Firebase Deployment",id:"firebase-deployment",children:[]},{value:"Slack Notifications",id:"slack-notifications",children:[]},{value:"Runtime Variables",id:"runtime-variables",children:[]},{value:"Misc Variables",id:"misc-variables",children:[]}]},{value:"Google APIs",id:"google-apis",children:[]},{value:"Functions Variables",id:"functions-variables",children:[]}],p={toc:c};function u(e){var t=e.components,n=(0,a.Z)(e,["components"]);return(0,r.kt)("wrapper",(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"deployment-via-circleci"},"Deployment via CircleCI"),(0,r.kt)("p",null,"We use CircleCI to handle automated build-test-deploy cycles when PRs and releases are created from the GitHub Repository"),(0,r.kt)("h2",{id:"environment-variables"},"Environment Variables"),(0,r.kt)("p",null,"The following environment variables should be set within the ",(0,r.kt)("a",{parentName:"p",href:"https://circleci.com/docs/2.0/env-vars/"},"CircleCI Environment"),", or via ",(0,r.kt)("a",{parentName:"p",href:"https://circleci.com/docs/2.0/contexts/"},"CircleCI Contexts")),(0,r.kt)("h3",{id:"firebase-deployment"},"Firebase Deployment"),(0,r.kt)("p",null,"The most secure way to provide the CI system access to deploy to firebase is by creating a service worker account with relevant permissions\nand storing the credentials as an environment variable (see this ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/firebase/firebase-tools/issues/825"},"Github Issue")," for more info)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"GOOGLE_APPLICATION_CREDENTIALS_JSON\n")),(0,r.kt)("p",null,"If using multiple projects (e.g. staging/prodcution) these can be configured in different contexts."),(0,r.kt)("p",null,"When configuring a service account the following permissions should be assigned:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Firebase Admin SDK Administrator Service Agent\nCloud Functions Service Agent\nCloud Functions Admin\nFirebase Hosting Admin\nCloud RuntimeConfig Admin\n")),(0,r.kt)("p",null,"Alternatively, a ",(0,r.kt)("inlineCode",{parentName:"p"},"FIREBASE_TOKEN")," environment variable can be created and set (See the ",(0,r.kt)("a",{parentName:"p",href:"https://firebase.google.com/docs/cli#cli-ci-systems"},"Firebase Docs"),"),\nhowever this is less preferable as the token would provide access to all a user's firebase projects"),(0,r.kt)("h3",{id:"slack-notifications"},"Slack Notifications"),(0,r.kt)("p",null,"Send slack notificatons on deploy success/fail/approval-hold:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"SLACK_DEFAULT_CHANNEL\nSLACK_ACCESS_TOKEN\n")),(0,r.kt)("p",null,"Currently passed with ",(0,r.kt)("inlineCode",{parentName:"p"},"circle-ci-slack-context")," context\nSee ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/CircleCI-Public/slack-orb"},"circleci slack orb")," for info)"),(0,r.kt)("h3",{id:"runtime-variables"},"Runtime Variables"),(0,r.kt)("p",null,"Any variables prefixed with ",(0,r.kt)("inlineCode",{parentName:"p"},"REACT_APP_")," are automatically included with the runtime build. Currently we require:"),(0,r.kt)("p",null,"Algolia places location lookup "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"REACT_APP_ALGOLIA_PLACES_API_KEY  \nREACT_APP_ALGOLIA_PLACES_APP_ID\n")),(0,r.kt)("p",null,"Firebase configuration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"REACT_APP_FIREBASE_API_KEY\nREACT_APP_FIREBASE_AUTH_DOMAIN  \nREACT_APP_FIREBASE_DATABASE_URL  \nREACT_APP_FIREBASE_MESSAGING_SENDER_ID  \nREACT_APP_FIREBASE_PROJECT_ID  \nREACT_APP_FIREBASE_STORAGE_BUCKET  \n")),(0,r.kt)("p",null,"Sentry error tracking"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"REACT_APP_SENTRY_DSN\n")),(0,r.kt)("p",null,"Google Analytics"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"REACT_APP_GA_TRACKING_ID \n")),(0,r.kt)("h3",{id:"misc-variables"},"Misc Variables"),(0,r.kt)("p",null,"Proposed (but not currently implemented)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"LIGHTHOUSE_API_KEY\n")),(0,r.kt)("h2",{id:"google-apis"},"Google APIs"),(0,r.kt)("p",null,"To deploy from service_account the following APIs will also need to be enabled for the project:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://console.cloud.google.com/apis/api/firebasehosting.googleapis.com"},"Firebase Hosting API"))),(0,r.kt)("h2",{id:"functions-variables"},"Functions Variables"),(0,r.kt)("p",null,"Additional config used in cloud functions has also been included via ",(0,r.kt)("inlineCode",{parentName:"p"},"firebase functions:config:set"),"\nE.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"discord_webhook"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"slack_webhook"),", "),(0,r.kt)("p",null,"TODO - This requires further documentation (and possibly merging)"))}u.isMDXComponent=!0}}]);